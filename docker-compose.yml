version: '3.8'

services:
  php-app:
    build: ./backend
    # image: manndshelby/invoice-backend:latest
    container_name: php-app
    
    restart: always
    
        
    ports:
      - "8000:8000"
    networks:
      - mynet
    volumes:
      - shared_data:/var/www/html/database
      
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  react_app2:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./ui:/app              # Mount current directory
      - /app/node_modules     # Prevent overwriting node_modules
    environment:
      - HOST=0.0.0.0
      - NODE_ENV=development
    networks:
      - mynet
    # deploy:
    #   replicas: 1
    #   restart_policy:
    #     condition: on-failure
    #   update_config:
    #     parallelism: 1
    #     delay: 10s
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # nginx:
  #   image: nginx:alpine
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - react-app
  #     # - react-app2
  #     # - php-app
  #     # - php-app2
  #   networks:
  #     - "mynet"
  #   container_name: nginx
networks:
  mynet:
    driver: bridge
volumes:
  shared_data:
    driver: local
    driver_opts:
      type: none
      device: ./storage
      o: bind
  